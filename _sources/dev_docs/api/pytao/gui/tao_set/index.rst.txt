:py:mod:`pytao.gui.tao_set`
===========================

.. py:module:: pytao.gui.tao_set

.. autoapi-nested-parse::

   This module defines some functions for efficiently running many set commands
   in tao.  The main function, tao_set(), compares the current value in a
   tk_tao_parameter's tk_var variable to its param.value variable to determine
   whether or not a set command needs to be run, and only runs set commands for
   the parameters that have been modified.



Module Contents
---------------

.. py:function:: check_for_changes(tao_list)

   Takes a list of tk_tao_parameters and returns True
   if any of the items have self.tk_var.get() !=
   self.param.value (i.e. if running tao_set would
   result in at least one set command for the list


.. py:function:: tao_dict_set(tao_dict, set_format, pipe)

   Runs set commands through the given pipe using the information in tao_dict and set_format
   tao_dict should be a dictionary whose values are themselves dictionaries
   set_format should be a format string that will get formatted with the keys of tao_dict.
   Ex: tao_dict = {1: {'name' : 'x', 'source' : 'lat'}, 2: {'weight': 100}}
   set_format = "set data orbit.x[{}]|"
   In this example, the following set commands will be run:
   set data orbit.x[1]|name = x
   set data orbit.x[1]|source = lat
   set data orbit.x[2]|weight = 100
   Note: Absolutely no input validation is performed


.. py:function:: tao_set(tao_list, set_str, pipe, overide=False)

   Takes a list of tk_tao_parameters and makes a call to tao
   to set the parameters to the values input by the user
   set_str should be "set global ", "set data orbit.x[10]|",
   or whatever is appropriate
   Use the overide option to run set commands even if no change has been made.


