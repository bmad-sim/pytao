:py:mod:`pytao.gui.tao_widget`
==============================

.. py:module:: pytao.gui.tao_widget

.. autoapi-nested-parse::

   This module defines some basic constructs used by the GUI, including the
   tk_tao_parameter class, which handles displaying and editing a single
   parameter in tao



Module Contents
---------------

.. py:class:: tk_tao_parameter(tao_parameter, frame, pipe=0, data_source='', plot='', struct_name='')

   Takes a tao_parameter (defined in parameters.py) and a tk frame,
   and creates an object containing the parameter and appropriate tk widget(s)
   for displaying and modifying the parameter and value
   pipe: the tao_interface object
   data_source: for DAT_TYPE and DAT_TYPE_Z, filters allowed data types
   plot: for DAT_TYPE_Z, the plot where x_axis_type should be checked
   struct_name: for the components of a STRUCT, pass the struct name here

   .. py:method:: print_info(self, *args)

      Prints diagnostic info about this widget for testing purposes


   .. py:method:: value(self)

      Returns the value in the input field(s) of self, appropriately typed
      If an invalid value is input, returns None


   .. py:method:: copy(self, ttp)

      Copy the the value(s) of the tk_var(s) of ttp into self
      Does nothing if ttp.param.type != self.param.type


   .. py:method:: param_copy(self, tao_param)

      Copies tao_param.value into self.tk_var (and slaves if appropriate)


   .. py:method:: open_file(self)

      Provides a dialog window for selecting a file



.. py:class:: d1_data_list_entry(master, d_list)

   Creates various tk widgets to display attributes of a single datum.
   Takes one line of output from python data_d_array as input.


.. py:class:: v1_var_list_entry(master, v_list)

   Creates the widgets needed to display a single variable held in a v1_var array
   v_list should be one row of output from
   python var_v_array [variable name]


.. py:function:: enum_fetch(enum, pipe)

   Takes the name of an enum variable and returns a list of its allowed values
   using the given pipe


.. py:function:: inum_fetch(inum, pipe)

   Takes the name of an inum variable and returns a list of its allowed values
   using the given pipe


.. py:function:: tk_tao_linker(tk_tao_list)

   Takes a list of tk_tao_parameters as input and returns a list of tk_tao_parameters
   The output list will have parameters marked with I either removed or
   added to their appropriate parent parameter's tk_wid


