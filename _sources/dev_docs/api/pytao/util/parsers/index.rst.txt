:py:mod:`pytao.util.parsers`
============================

.. py:module:: pytao.util.parsers


Module Contents
---------------

.. py:data:: DATA_D_COLS
   :annotation: = ['ix_d1', 'data_type', 'merit_type', 'ele_ref_name', 'ele_start_name', 'ele_name', 'meas_value',...

   

.. py:data:: DATA_D_TYPES
   

   

.. py:function:: parse_data_d_array(lines)

   Parses the output of the 'python data_d_array' command into a list of dicts.

   This can be easily be case into a table. For example:

   import pandas as pd
   ...
   lines = tao.data_d_array('orbit', 'x')
   dat = parse_data_d_array(lines)
   df = pd.DataFrame(dat)


   :param lines: The output of the 'python data_d_array' command to parse
   :type lines: list of str

   :returns: **datums** -- Each dict has keys:
             'ix_d1', 'data_type', 'merit_type',
             'ele_ref_name', 'ele_start_name', 'ele_name',
             'meas_value', 'model_value', 'design_value',
             'useit_opt', 'useit_plot', 'good_user',
             'weight', 'exists'
   :rtype: list of dicts


.. py:function:: parse_derivative(lines)

   Parses the output of tao python derivative

   :param lines: The output of the 'python derivative' command to parse
   :type lines: list of str

   :returns: **out** -- Dictionary with keys corresponding to universe indexes (int),
             with dModel_dVar as the value:
                 np.ndarray with shape (n_data, n_var)
   :rtype: dict


.. py:function:: parse_lat_ele_list(lines)

   Parses the output of tao python lat_ele_list

   :param lines: The output of the 'python lat_ele_list' command to parse
   :type lines: list of str

   :returns:
   :rtype: list of str of element names


.. py:function:: parse_matrix(lines)

   Parses the output of a tao python matix

   :param lines: The output of the 'python matrix' command to parse
   :type lines: list of str

   :returns: 'mat6' : np.array of shape (6,6)
             'vec6' : np.array of shape(6)
   :rtype: dict with keys


.. py:function:: parse_plot_list(lines)

   Parses the output of the `python plot_list` command.

   This could be region or template data.


   :param lines: The output of the 'python plot_list' command to parse
   :type lines: list of str

   :returns: * *if r_or_g == 't'* -- dict with template_name:index
             * *if r_or_g == 'r'* --

               list of dicts with keys:
                   region
                   ix
                   plot_name
                   visible
                   x1, x2, y1, y1


.. py:function:: parse_var_v_array_line(line)


.. py:function:: parse_var_v_array(lines)

   Parses the output of `python var_v_array` into a list of dicts


